/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:0;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}.cover{min-height:calc(100vh - 60px);background-color:#2f2e2a}.cover .wrapper{display:flex;flex-direction:column}@media(min-width:768px){.cover .wrapper{flex-direction:row}}.cover_info{display:flex;flex-direction:column;align-items:flex-end;justify-content:flex-end;flex-basis:300px;padding:10px}@media(min-width:768px){.cover_info{padding:20px 30px 0 0}}.cover_info h2{position:relative;margin:0 0 30px;padding:10px 0;text-align:right;color:#fbb926}.cover_info h2:after{content:'';position:absolute;bottom:0;right:0;height:2px;width:60px;background-color:#fbb926}.cover_info p{margin:0;text-align:right;font-size:20px;color:#ededed}.cover_video{display:flex;align-items:center;justify-content:center;font-size:60px;color:#fff;background-color:#6e6e6e;min-height:400px;height:calc(100vh - 120px)}@media(min-width:768px){.cover_video{flex-basis:calc(100% - 300px)}}.area{min-height:200px;padding:100px 40px;background-color:#2f2e2a}@media(min-width:768px){.area{padding:100px 100px}}.area-list li{min-height:200px;display:flex}.area-list li .info-block{display:flex;align-items:center;flex-basis:calc(100% - 40%);font-size:20px;line-height:1.5;color:#fbb926}.area-list li .visual-block{flex-basis:40%;padding:20px 40px;height:180px}.area-list li .visual-block img{height:100%}.area-list li:nth-child(2n+1) .info-block{justify-content:flex-end;text-align:right}.area-list li:nth-child(2n) .visual-block{text-align:right}.portfolio{min-height:800px;background-color:#000}.advantages{background-color:#6e6e6e}.advantages .tab-block{padding-bottom:60px}.advantages .tab-block .tabs{width:100%;margin-bottom:20px;padding:0 20px;display:flex;justify-content:space-between}@media(min-width:768px){.advantages .tab-block .tabs{padding:60px 20px 20px}}.advantages .tab-block .tabs li{padding:4px 4px 10px;cursor:pointer;border-bottom:1px solid transparent}.advantages .tab-block .tabs li.active{border-bottom:2px solid #fbb926}.advantages .tab-block .tabs li img{display:block;width:40px;height:40px;border-radius:50%;background-color:#fbb926;overflow:hidden}.advantages .tab-block .panel-block{min-height:200px}@media(min-width:768px){.advantages .tab-block .panel-block{padding:20px 40px}}.advantages .tab-block .panel-block .tab-panel{display:none;width:100%;max-width:800px;margin:0 auto}.advantages .tab-block .panel-block .tab-panel.active{display:block}.advantages .tab-block .panel-block .tab-panel h4{font-family:"Montserrat",Arial,sans-serif;font-size:20px;font-weight:600;line-height:1.5;color:#2f2e2a}.advantages .tab-block .panel-block .tab-panel p{font-family:"Open Sans",Arial,sans-serif;color:#ededed;font-size:18px;font-weight:500;line-height:1.5}*{box-sizing:border-box}ul{margin:0;padding:0;list-style:none}a{color:black;text-decoration:none;outline:0}.wrapper{width:100%;margin:0 auto;padding:0 10px;max-width:1920px}@media(min-width:560px){.wrapper{padding:0 20px}}@media(min-width:960px){.wrapper{padding:0 40px}}body{font-family:"Montserrat",Arial,sans-serif;font-size:12px}.header{background-color:#2f2e2a}.header .header-inner{display:flex;align-items:center;justify-content:space-between;min-height:60px;padding-top:4px;padding-bottom:4px}.header .logo{padding:6px 20px;background:#fbb926;color:#000;border-radius:40px;cursor:default}.header nav ul li{display:inline-block;margin-right:24px}.header nav ul li:last-child{margin-right:0}.header nav ul a{display:block;padding:4px;font-family:"Montserrat",Arial,sans-serif;text-transform:uppercase;color:#ededed;transition:color .2s ease-out}.header nav ul a:hover{color:#fbb926}
/*# sourceMappingURL=styles.css.map */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
